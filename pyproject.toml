[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fluxpype"
version = "0.1.5"
description = "A wrapper and installer for the FLUX model"
readme = "README.md"
requires-python = ">=3.8.1"
license = { file = "LICENSE" }

classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "matplotlib",
    "sunpy",
    "pandas",
    "tqdm",
    "astropy",
    "bs4",
    "lxml",
    "zeep",
    "drms",
    "timeout_decorator",
    "rich",
]

[project.optional-dependencies]
spark = ["pyspark>=3.0.0"]
test = [
    "bandit[toml]==1.7.10",
    "black==24.8.0",
    "check-manifest==0.50",
    "flake8-bugbear==24.10.31",
    "flake8-docstrings",
    "flake8-formatter_junit_xml",
    "flake8",
    "flake8-pyproject",
    "pre-commit==4.0.1",
    "pylint==3.2.7",
    "pylint_junit",
    "pytest-cov==6.0.0",
    "pytest-mock<3.14.1",
    "pytest-runner",
    "pytest==8.3.3",
    "pytest-github-actions-annotate-failures",
    "shellcheck-py==0.10.0.1",
]

[project.urls]
Documentation = "https://github.com/gillyspace27/fluxpype#readme"
Source = "https://github.com/gillyspace27/fluxpype"
Tracker = "https://github.com/gillyspace27/fluxpype/issues"
Homepage = "https://github.com/gillyspace27/fluxpype"

[tool.bandit]
exclude_dirs = ["build", "dist", "tests", "scripts"]
number = 4
recursive = true
targets = "src"

[tool.black]
line-length = 120
fast = true

[tool.coverage.run]
branch = true

[tool.coverage.report]
fail_under = 25

[tool.flake8]
max-line-length = 120
select = ["F", "E", "W", "B", "B901", "B902", "B903"]
exclude = [".eggs", ".git", ".tox", "build", "dist", "tests", "swagger_client"]
ignore = ["E722", "B001", "W503", "E203"]

[tool.pytest.ini_options]
addopts = "--cov-report xml:coverage.xml --cov src --cov-fail-under 0 --cov-append -m 'not integration'"
testpaths = "tests"
markers = [
    "integration: marks as integration test",
    "spark: marks tests which need Spark",
    "slow: marks tests as slow",
    "unit: fast offline tests",
]
