[build-system]
requires = ["setuptools>=42", "wheel", "poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "fluxpype"
version = "0.1.8"
description = "A Python wrapper and installer for the FLUX modeling framework"
authors = ["Gilly <gilly@swri.org>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/gillyspace27/fluxpype"
repository = "https://github.com/gillyspace27/fluxpype"
documentation = "https://github.com/gillyspace27/fluxpype#readme"
keywords = ["FLUX", "modeling", "data analysis"]

[tool.poetry.dependencies]
python = "^3.8"
matplotlib = "^3.4"
numpy = "<2.0"
sunpy = "^4.0"
pandas = "^1.3"
tqdm = "^4.62"
astropy = "<7.0"           # Fixing dependency issue
bs4 = "^0.0.1"
lxml = "^4.6"
zeep = "^4.1"
drms = "^0.6"
timeout-decorator = "^0.5"
rich = "^10.13"

[tool.poetry.extras]
FLUXcore = ["pexpect", "PyQt5"]

[tool.poetry.scripts]
flux-installer = "fluxpype.installers.flux_installer:install"
flux-config-run = "fluxpype.config_runner:run"
flux-config-view = "fluxpype.config_runner:view"
flux-config-edit = "fluxpype.config_runner:open_file"

[tool.pytest.ini_options]
addopts = "--cov-report xml:coverage.xml --cov src --cov-fail-under 0 --cov-append -m 'not integration'"
testpaths = ["tests"]
markers = [
    "integration: marks as integration test",
    "spark: marks tests which need Spark",
    "slow: marks tests as slow",
    "unit: fast offline tests",
]

[tool.black]
line-length = 120
fast = true

[tool.flake8]
max-line-length = 120
exclude = [".eggs", ".git", ".tox", "build", "dist", "tests", "swagger_client"]
ignore = ["E722", "B001", "W503", "E203"]
